{"ast":null,"code":"var _jsxFileName = \"/home/thephiri/gogos-recipes/src/pages/Searched.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Searched() {\n  _s();\n\n  const [searchedRecipes, setSearchedRecipes] = useState([]);\n  let params = useParams();\n\n  const getSearched = async name => {\n    const data = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_API_KEY}&query=${name}`);\n    const recipies = await data.json();\n    setSearchedRecipes(recipies.results);\n  };\n\n  useEffect(() => {\n    getSearched(params.search);\n  }, [params.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Searched\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Searched, \"EA/UH+hErMz0y211hGQq5RPtRO0=\", false, function () {\n  return [useParams];\n});\n\n_c = Searched;\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n    grid-gap: 2rem;\n    `;\nconst Card = styled(motion.div)`\n    img {\n        border-radius: 2rem;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    a {\n        text-decoration: none;\n    }\n\n    h4 {\n        text-align: center;\n      //  padding: 1rem;\n    }\n    `;\nexport default Searched;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searched\");","map":{"version":3,"names":["React","useEffect","useState","useParams","styled","Searched","searchedRecipes","setSearchedRecipes","params","getSearched","name","data","fetch","process","env","REACT_APP_API_KEY","recipies","json","results","search","Grid","div","Card","motion"],"sources":["/home/thephiri/gogos-recipes/src/pages/Searched.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport { styled } from \"styled-components\";\n\nfunction Searched() {\n    const [searchedRecipes, setSearchedRecipes] = useState([]);\n    let params = useParams();\n\n        const getSearched = async (name) => {\n        const data = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_API_KEY}&query=${name}`);\n        const recipies = await data.json();\n\n        setSearchedRecipes(recipies.results);\n\n    };\n\n    useEffect(()=>{\n        getSearched(params.search);\n    }, [params.search]);\n\n\n  return (\n    <div>Searched</div>\n  )\n}\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n    grid-gap: 2rem;\n    `\n\n    const Card = styled(motion.div)`\n    img {\n        border-radius: 2rem;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    a {\n        text-decoration: none;\n    }\n\n    h4 {\n        text-align: center;\n      //  padding: 1rem;\n    }\n    `;\n\nexport default Searched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAChB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;EACA,IAAIM,MAAM,GAAGL,SAAS,EAAtB;;EAEI,MAAMM,WAAW,GAAG,MAAOC,IAAP,IAAgB;IACpC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,4DAA2DC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAASL,IAAK,EAAzG,CAAxB;IACA,MAAMM,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,EAAvB;IAEAV,kBAAkB,CAACS,QAAQ,CAACE,OAAV,CAAlB;EAEH,CANG;;EAQJjB,SAAS,CAAC,MAAI;IACVQ,WAAW,CAACD,MAAM,CAACW,MAAR,CAAX;EACH,CAFQ,EAEN,CAACX,MAAM,CAACW,MAAR,CAFM,CAAT;EAKF,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;GApBQd,Q;UAEQF,S;;;KAFRE,Q;AAsBT,MAAMe,IAAI,GAAGhB,MAAM,CAACiB,GAAI;AACxB;AACA;AACA;AACA,KAJA;AAMI,MAAMC,IAAI,GAAGlB,MAAM,CAACmB,MAAM,CAACF,GAAR,CAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhBI;AAkBJ,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}